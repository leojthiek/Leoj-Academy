// "use client"
// import {
//   Accordion,
//   AccordionDetails,
//   AccordionSummary,
//   Box,
//   Container,
//   IconButton,
//   Typography,
// } from "@mui/material"
// import ExpandMoreIcon from "@mui/icons-material/ExpandMore"
// import React from "react"
// import styles from "./page.module.css"
// import { AppDispatch, RootState } from "@/app/redux/store"
// import { useDispatch, useSelector } from "react-redux"
// import { fetchVideoUrl } from "@/app/redux/features/contentSlice/contentSlice"
// import { OndemandVideo } from "@mui/icons-material"
// import ClearIcon from "@mui/icons-material/Clear"
// import LockIcon from "@mui/icons-material/Lock"
// import ReactPlayer from "react-player"
// import Link from "next/link"

// interface Course {
//   id: string
//   course_name: string
//   course_description: string
//   course_price: number
//   course_instructor: string
//   numOfReviews: number
//   rating: number
//   course_category: string
//   chapter: Chapter[]
// }

// interface Chapter {
//   id: string
//   Chapter_title: string
//   Chapter_description: string
//   content: [
//     {
//       id: string
//       title: string
//       description: string
//       videoURL: string
//     }
//   ]
// }

// export default function CourseContent() {
//   const [currentVideoId, setCurrentVideoId] = React.useState(null)
//   const [showVideo, setShowVideo] = React.useState(false)
//   const dispatch: AppDispatch = useDispatch()

//   const courseDetails = useSelector<
//     RootState,
//     { course: Course | null; error: unknown; loading: boolean }
//   >((state) => state.courseDetail)
//   const { course, error, loading } = courseDetails

//   const fetchVideo = useSelector<
//     RootState,
//     { url: string; error: any | string; loading: boolean }
//   >((state) => state.videoUrl)
//   const { url, error: videoError, loading: videoLoasing } = fetchVideo

//   const chapters = course?.chapter

//   const handleVideoShow = (videoUrl: string,videoId:any) => {
//     if (course?.id) {
//       try {
//         dispatch(
//           fetchVideoUrl({
//             id: course?.id,
//             bucketName: "leoj_academy",
//             keyName: videoUrl,
//           })
//         )
//         setShowVideo(true)
//         setCurrentVideoId(videoId)
//       } catch (error) {
//         console.log(error)
//       }
//     }
//   }

//   React.useEffect(() => {
//     if (showVideo) {
//       document.body.style.overflow = "hidden"
//     } else {
//       document.body.style.overflow = "auto"
//     }
//   }, [showVideo])

//   const videoExit = () => {
//     setShowVideo(false)
//   }

//   return (
//     <div className={styles.main}>
//       <Container>
//         <Typography className={styles.mainTitle}>Course content :</Typography>
//         <hr />
//         {course?.chapter.map((cours) => (
//           <Accordion key={cours.id}>
//             <AccordionSummary
//               className={styles.chapterContainer}
//               expandIcon={<ExpandMoreIcon />}
//               aria-controls='panel1a-content'
//               id='panel1a-header'
//             >
//               <Typography className={styles.chapterName}>
//                 {cours.Chapter_title}
//               </Typography>
//             </AccordionSummary>
//             {cours.content.map((conten) => (
//               <AccordionDetails key={conten.id}>
//                 <AccordionSummary
//                   // onClick={() => handleVideoShow(conten.videoURL,conten.id)}
//                 >
//                   <Link href={'/pages/videoPlayingPage'}>
//                   <Typography className={styles.contentName}>
//                     {conten.title}
//                   </Typography>
//                   </Link>
//                 </AccordionSummary>
//               </AccordionDetails>
//             ))}
//           </Accordion>
//         ))}
//       </Container>
//       {/* {showVideo && (
//         <div className={styles.videoContainer}>
//           <div className={styles.videoWrapper}>
//             <Container>
//               <Typography className={styles.preview}>Course preview</Typography>
//               <Typography className={styles.courseTitle}>
//                 {course?.course_name}
//               </Typography>
//               <div className={styles.mainVideoContainer}>
//                 {videoLoasing ? (
//                   <h1>Loading...</h1>
//                 ) : videoError ? (
//                   <Typography
//                     style={{
//                       color: "white",
//                       display: "flex",
//                       flexDirection: "column",
//                       justifyContent: "center",
//                       alignItems: "center",
//                       fontFamily: "fantasy",
//                       fontSize: "26px",
//                       fontWeight: "600",
//                     }}
//                   >
//                     {videoError}
//                     <IconButton size='large' className={styles.lockIcon}>
//                       {<LockIcon />}
//                     </IconButton>
//                   </Typography>
//                 ) : (
//                   <ReactPlayer url={url} controls width={700} height={400} />
//                 )}
//               </div>
//               <div className={styles.contentContainer}>
//                 <Typography className={styles.videoCourseTitle}>
//                   Course content :
//                 </Typography>
//                 {chapters?.map((chap) => (
//                   <div key={chap.id}>
//                     {chap.content.map((cont) => (
//                       <Container key={cont.id}>
//                         <div 
//                           className={styles.contentStyle}
//                           onClick={() => handleVideoShow(cont.videoURL,cont.id)}
//                           style={{
//                             backgroundColor: currentVideoId === cont.id ? 'GrayText' : 'transparent',
//                           }}
//                         >
//                           <Typography style={{ color: "white",paddingTop:'8px',paddingLeft:'8px'}}>
//                             <OndemandVideo />
//                           </Typography>
//                           <Typography
//                             className={styles.videoContentTitle}
//                             key={cont.id}
//                           >
//                             {cont.title}
//                           </Typography>
//                         </div>
//                       </Container>
//                     ))}
//                   </div>
//                 ))}
//               </div>
//               <IconButton onClick={videoExit} className={styles.closeButton}>
//                 <ClearIcon />
//               </IconButton> */}
//             {/* </Container> */}
//           {/* </div> */}
//         {/* </div>
//       )} */}
//     </div>
//   )
// }
